name: start-runner

on:
  workflow_call:
    inputs:
      EC2_INSTANCE_TYPE:
        required: true
        type: string
      ENVIRONMENT:
        required: false
        default: prod
        type: string
      RUNNER_SIZE:
        type: string
        default: regular
      USE_CUSTOM_RUNNER:
        type: string
        default: "0"
      USE_OIDC:
        description: 'Use OIDC for AWS authentication'
        required: false
        type: boolean
        default: false
    secrets:
      AWS_GITHUBRUNNER_USER_ACCESS_KEY:
        required: true
      AWS_GITHUBRUNNER_USER_SECRET_ID:
        required: true
      AWS_GITHUBRUNNER_PAT:
        required: true
      AWS_REGION:
        required: true
      AWS_ACCOUNT_ID:
        required: true
    outputs:
      label:
        description: The ec2 runner label
        value: ${{ jobs.start-runner.outputs.label }}
      ec2-instance-id:
        description: The id of the ec2 instance
        value: ${{ jobs.start-runner.outputs.ec2-instance-id }}
      use-persisted:
        description: Whether to use a persistent github runner
        value: ${{ jobs.start-runner.outputs.use_persisted }}

jobs:
  start-runner: # This job runs on the github actions runner, and all it is doing is setting up our own runner on AWS 
    runs-on: ubuntu-latest
    outputs:
      label: ${{ steps.get-runner-label.outputs.label }}
      ec2-instance-id: ${{ steps.start-ec2-runner.outputs.ec2-instance-id }}
      use_persisted: ${{ steps.check-persistent-running.outputs.use_persisted }}
    steps:
      - name: Checkout I.AI Core GitHub Actions
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.COMMIT_HASH }}
          fetch-depth: 0
          path: main

      - name: Dump inputs context
        env:
          INPUTS: ${{ toJSON(inputs) }}
        run: echo "$INPUTS"

      - name: AWS Authentication
        uses: ./.github/actions/authenticate_aws
        with:
          USE_OIDC: ${{ inputs.USE_OIDC }}
          ENVIRONMENT: ${{ inputs.ENVIRONMENT }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
          AWS_GITHUBRUNNER_USER_ACCESS_KEY: ${{ secrets.AWS_GITHUBRUNNER_USER_ACCESS_KEY }}
          AWS_GITHUBRUNNER_USER_SECRET_ID: ${{ secrets.AWS_GITHUBRUNNER_USER_SECRET_ID }}

      - name: Check for persistent runner
        id: check-persistent-running
        run: |
          data="$(curl \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.AWS_GITHUBRUNNER_PAT }}" \
            https://api.github.com/orgs/i-dot-ai/actions/runners)"
          label_name="i-dot-ai-${{ inputs.ENVIRONMENT }}-persistent-${{inputs.RUNNER_SIZE}}"
          available_runners=$(jq -r '.runners[] | select(.labels[].name=='\"$label_name\"' and .busy==false and .status=="online" )' <<< "${data}")
          if [[ $available_runners && "${{ inputs.USE_CUSTOM_RUNNER }}" == "0" ]]; then
           echo "use_persisted=1" >> $GITHUB_OUTPUT
           echo "runner_label=${label_name}" >> $GITHUB_OUTPUT
          else
           echo "use_persisted=0" >> $GITHUB_OUTPUT
          fi

      - name: Export EC2_ROLE
        uses: ./.github/actions/export_parameter
        if: steps.check-persistent-running.outputs.use_persisted == 0
        with:
            PARAMETER_STORE_VAR_NAME: /github-runner-${{ inputs.ENVIRONMENT }}/ec2-role
            ENVIRONMENT_VAR_NAME: EC2_ROLE

      - name: Export SECURITY_GROUP_ID
        uses: ./.github/actions/export_parameter
        if: steps.check-persistent-running.outputs.use_persisted == 0
        with:
            PARAMETER_STORE_VAR_NAME: /github-runner-${{ inputs.ENVIRONMENT }}/security-group-id
            ENVIRONMENT_VAR_NAME: SECURITY_GROUP_ID

      - name: Export SUBNET_ID
        uses: ./.github/actions/export_parameter
        if: steps.check-persistent-running.outputs.use_persisted == 0
        with:
            PARAMETER_STORE_VAR_NAME: /github-runner-${{ inputs.ENVIRONMENT }}/subnet-id
            ENVIRONMENT_VAR_NAME: SUBNET_ID

      - name: Export AMI_ID
        uses: ./.github/actions/export_parameter
        if: steps.check-persistent-running.outputs.use_persisted == 0
        with:
            PARAMETER_STORE_VAR_NAME: /github-runner-${{ inputs.ENVIRONMENT }}/ami-id
            ENVIRONMENT_VAR_NAME: AMI_ID

      - name: Export EFS_ID
        uses: ./.github/actions/export_parameter
        if: steps.check-persistent-running.outputs.use_persisted == 0
        with:
            PARAMETER_STORE_VAR_NAME: /github-runner-${{ inputs.ENVIRONMENT }}/efs-id
            ENVIRONMENT_VAR_NAME: EFS_ID

      - name: Export EFS_MOUNT_PATH
        uses: ./.github/actions/export_parameter
        if: steps.check-persistent-running.outputs.use_persisted == 0
        with:
            PARAMETER_STORE_VAR_NAME: /github-runner-${{ inputs.ENVIRONMENT }}/efs-mount-path
            ENVIRONMENT_VAR_NAME: EFS_MOUNT_PATH

      - name: Start EC2 runner
        id: start-ec2-runner
        uses: i-dot-ai/ec2-github-runner@main
        if: steps.check-persistent-running.outputs.use_persisted == 0
        with:
          mode: start
          github-token: ${{ secrets.AWS_GITHUBRUNNER_PAT}}
          ec2-image-id: ${{ env.AMI_ID }}
          ec2-instance-type: ${{ inputs.EC2_INSTANCE_TYPE }}
          subnet-id: ${{ env.SUBNET_ID }}
          security-group-id: ${{ env.SECURITY_GROUP_ID }}
          # Controls the access of the instance
          iam-role-name: ${{ env.EC2_ROLE }}
          aws-resource-tags: > # optional, requires additional permissions
            [
              {"Key": "Name", "Value": "ec2-github-runner"},
              {"Key": "GitHubRepository", "Value": "${{ github.repository }}"}
            ]
          ec2-volume-size: 64
          pre-runner-script: |
            #!/bin/bash
            sudo mkdir ${{ env.EFS_MOUNT_PATH }}
            sudo mount -t efs ${{ env.EFS_ID }}:/ ${{ env.EFS_MOUNT_PATH }}

      - name: Get runner label
        id: get-runner-label
        run: |
          if [[ ${{ steps.check-persistent-running.outputs.use_persisted }} == 1 ]]; then
            echo "label=${{ steps.check-persistent-running.outputs.runner_label }}" >> $GITHUB_OUTPUT
          else
            echo "label=${{ steps.start-ec2-runner.outputs.label }}" >> $GITHUB_OUTPUT
          fi
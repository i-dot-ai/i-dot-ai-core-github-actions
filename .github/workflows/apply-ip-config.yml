name: Release IP Config

on:
  workflow_call:
    inputs:
      APP_NAME:
        required: true
        type: string
      RUNNER_LABEL:
        required: true
        type: string
      USE_OIDC:
        type: string
        required: false
      INSTANCE:
        type: string
        required: false

    secrets:
      AWS_GITHUBRUNNER_PAT:
        required: true
      AWS_GITHUBRUNNER_PAT_USER:
        required: true
      AWS_REGION:
        required: true
      AWS_ACCOUNT_ID:
        required: true

jobs:
  apply-ip-config:
    runs-on: ${{ inputs.RUNNER_LABEL }}

    permissions:
      id-token: write
      contents: read

    steps:

    - name: Checkout
      uses: actions/checkout@v4
      with:
        path: main

    - name: Dump inputs context
      env:
        INPUTS: ${{ toJSON(inputs) }}
      run: echo "$INPUTS"

    - name: Set global git credentials
      run: git config --global url.https://${{ secrets.AWS_GITHUBRUNNER_PAT }}@github.com/.insteadOf https://github.com/

    - name: Dump inputs context
      env:
        INPUTS: ${{ toJSON(inputs) }}
      run: echo "$INPUTS"

    - name: AWS Authentication
      uses: i-dot-ai/i-dot-ai-core-github-actions/.github/actions/authenticate-aws@main
      with:
        APP_NAME: ${{ inputs.APP_NAME }}
        USE_OIDC: ${{ inputs.USE_OIDC }}
        AWS_REGION: ${{ secrets.AWS_REGION }}
        AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
        AWS_GITHUBRUNNER_USER_ACCESS_KEY: ${{ secrets.AWS_GITHUBRUNNER_USER_ACCESS_KEY }}
        AWS_GITHUBRUNNER_USER_SECRET_ID: ${{ secrets.AWS_GITHUBRUNNER_USER_SECRET_ID }}

    - name: Check AWS Auth
      shell: bash
      run: aws sts get-caller-identity



    - name: Checkout
      uses: actions/checkout@v4
      with:
          path: main


    - name: Terraform init
      env:
        INSTANCE: ${{ inputs.INSTANCE }}
      run: |
        cd main
        if [[ "$INSTANCE" == "universal" ]]; then
          make tf_init instance=$INSTANCE
        else
          make tf_init instance=infra env=$INSTANCE
        fi

    - name: Terraform apply
      env:
        INSTANCE: ${{ inputs.INSTANCE }}
      run: |
        cd main
        if [[ "$INSTANCE" == "universal" ]]; then
          make tf_auto_apply instance=$INSTANCE
        else
          make tf_auto_apply instance=infra env=$INSTANCE
        fi

    - name: Copy terraform logs to s3
      if: always()
      env:
        ENVIRONMENT: prod
        APP_NAME: ${{ inputs.APP_NAME }}
      run: |
        cd main
        FILENAME=$APP_NAME/$(date +\%H-\%M-%d-%m-%Y)-$(git rev-parse HEAD).log
        aws s3 cp tf_apply_log.log "s3://i-dot-ai-$ENVIRONMENT-github-runner-logs/${FILENAME}"
